<%- include('../layout-header') %>
<div class="container py-5">
  <div class="row mb-4">
    <div class="col-12 text-center">
      <h2 class="mb-3 text-primary">智能作业辅导系统</h2>
      <p class="lead">AI驱动的作业分析与分学科辅导，助力学生独立思考，赋能家长科学辅导。</p>
    </div>
  </div>
  <!-- 题目输入区 -->
  <div class="row mb-4">
    <div class="col-md-8 offset-md-2">
      <div class="card shadow-sm">
        <div class="card-body">
          <h5 class="card-title">1. 输入你的作业题目</h5>
          <textarea id="questionText" class="form-control mb-2" rows="3" placeholder="请粘贴或输入题目内容"></textarea>
          <input type="file" id="imageInput" accept="image/*" class="form-control mb-2" />
        <small class="text-muted">Optional: Upload the title picture, and the AI ​​will automatically recognize the text content</small>

          <div class="input-group mb-2">
            <label class="input-group-text" for="subject">学科</label>
            <select id="subject" class="form-select">
              <option value="">自动识别</option>
              <option value="数学">数学</option>
              <option value="语文">语文</option>
              <option value="英语">英语</option>
            </select>
            <button id="analyzeBtn" class="btn btn-primary" type="button">智能分析</button>
          </div>
          <div id="inputError" class="text-danger small"></div>
        </div>
      </div>
    </div>
  </div>
  <!-- 题目分析与分学科辅导区 -->
  <div class="row mb-4" id="analysisSection" style="display:none;">
    <div class="col-md-8 offset-md-2">
      <div class="card border-success shadow-sm">
        <div class="card-body">
          <h5 class="card-title text-success">2. 题目分析与分学科辅导</h5>
          <div id="analysisResult"></div>
        </div>
      </div>
    </div>
  </div>
  <!-- 渐进式思维引导区 -->
  <div class="row mb-4" id="guidanceSection" style="display:none;">
    <div class="col-md-8 offset-md-2">
      <div class="card border-info shadow-sm">
        <div class="card-body">
          <h5 class="card-title text-info">3. 渐进式思维引导</h5>
          <div id="guidanceResult"></div>
          <button id="nextGuidanceBtn" class="btn btn-outline-info mt-2">下一步引导</button>
        </div>
      </div>
    </div>
  </div>
  <!-- 家长辅导支持区 -->
  <div class="row mb-4" id="parentSection" style="display:none;">
    <div class="col-md-8 offset-md-2">
      <div class="card border-warning shadow-sm">
        <div class="card-body">
          <h5 class="card-title text-warning">4. 家长辅导支持</h5>
          <div id="parentSupportResult"></div>
        </div>
      </div>
    </div>
  </div>
</div>
<%- include('../layout-footer') %>
<script src="https://cdn.bootcdn.net/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<!-- MathJax配置，支持$...$内联公式 -->
<script>
window.MathJax = {
  tex: {
    inlineMath: [['$', '$'], ['\\(', '\\)']],
    displayMath: [['$$', '$$'], ['\\[', '\\]']],
    processEscapes: true,
    processEnvironments: true,
    packages: ['base', 'ams', 'noerrors', 'noundefined']
  },
  svg: { fontCache: 'global' },
  startup: {
    pageReady: () => {
      console.log('MathJax 已加载完成');
      return MathJax.startup.defaultPageReady();
    }
  },
  options: {
    enableMenu: false,
    menuOptions: {
      settings: {
        texHints: true,
        semantics: false,
        zoom: 'NoZoom',
        zscale: '200%'
      }
    }
  }
};
</script>
<script src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script>
let lastQuestion = '';
let lastSubject = '';
let currentStep = '';


function renderAnalysis(data) {
  let html = `<div><b>学科：</b>${data.学科 || ''}　<b>题型：</b>${data.题型 || ''}　<b>难度：</b>${data.难度 || ''}</div>`;

  // 关键信息
  if (data.关键信息) {
    html += `<div class='mt-2'><b>关键信息：</b><ul>`;
    const infoItems = Array.isArray(data.关键信息)
      ? data.关键信息
      : Object.entries(data.关键信息);

    infoItems.forEach(item => {
      if (Array.isArray(item)) {
        html += `<li><b>${item[0]}：</b>${item[1]}</li>`;
      } else {
        html += `<li>${item}</li>`;
      }
    });

    html += `</ul></div>`;
  }

  // 分学科辅导
  if (data['分学科guidance'] && typeof data['分学科guidance'] === 'object') {
    html += `<div class='mt-3'><b>分学科辅导：</b>`;

    Object.entries(data['分学科guidance']).forEach(([key, value]) => {
      html += `<div class='mt-2'><b>${key}：</b>`;
      if (Array.isArray(value)) {
        html += `<ul>${value.map(i => `<li>${i}</li>`).join('')}</ul>`;
      } else if (typeof value === 'object') {
        html += `<ul>`;
        Object.entries(value).forEach(([subKey, subVal]) => {
          html += `<li><b>${subKey}：</b>${subVal}</li>`;
        });
        html += `</ul>`;
      } else {
        html += `${value}`;
      }
      html += `</div>`;
    });

    html += `</div>`;
  }

  return html;
}





function renderGuidance(data) {
  return `<div><b>${data.step || ''}：</b>${data.content || ''}</div>`;
}

function renderParentSupport(data) {
  let html = `<div><b>知识点说明：</b>${data.knowledge || ''}</div>`;
  html += `<div class='mt-2'><b>标准解题过程：</b>${data.solution || ''}</div>`;
  if (data.errorCommon) html += `<div class='mt-2'><b>常见错误提醒：</b>${data.errorCommon}</div>`;
  if (data.extension) html += `<div class='mt-2'><b>拓展知识：</b>${data.extension}</div>`;
  ['talk', 'encourage', 'correct', 'interact', 'training'].forEach(k => {
    if (data[k] && data[k].length) html += `<div class='mt-2'><b>${k}：</b>${data[k].join('，')}</div>`;
  });
  if (data.trainingConcept || data.subjectFeature || data.psychology || data.problemSolve) {
    html += `<div class='mt-4 p-3 border rounded bg-light'><b>家长培训模块</b>`;
    if (data.trainingConcept) html += `<div class='mt-2'><b>辅导理念：</b>${data.trainingConcept}</div>`;
    if (data.subjectFeature) html += `<div class='mt-2'><b>学科特点：</b>${data.subjectFeature}</div>`;
    if (data.psychology) html += `<div class='mt-2'><b>心理引导：</b>${data.psychology}</div>`;
    if (data.problemSolve) html += `<div class='mt-2'><b>问题应对：</b>${data.problemSolve}</div>`;
    html += `</div>`;
  }
  return html;
}

function renderMathJax() {
  if (window.MathJax) {
    (MathJax.typesetPromise ? MathJax.typesetPromise() : MathJax.typeset()).catch(err => console.error('MathJax渲染失败:', err));
  }
}



let currentImageBase64 = '';

function getBase64(file) {
  return new Promise((resolve, reject) => {
    const reader = new FileReader();
    reader.readAsDataURL(file);
    reader.onload = () => resolve(reader.result);
    reader.onerror = error => reject(error);
  });
}

$('#analyzeBtn').on('click', async function () {
  const questionText = $('#questionText').val().trim();
  const subject = $('#subject').val();
  const imageInput = $('#imageInput')[0];
  const imageFile = imageInput.files[0];

  if (!questionText && !imageFile) {
    $('#inputError').text('请输入题目内容或上传图片');
    return;
  }

  $('#inputError').text('');
  $('#analyzeBtn').prop('disabled', true).text('分析中...');
  $('#analysisSection, #guidanceSection, #parentSection').hide();

  let imageBase64 = '';
  if (imageFile) {
    imageBase64 = await getBase64(imageFile); // Convert image to base64
    currentImageBase64 = imageBase64; // Save for guidance step
  }

  const formData = new FormData();
  if (questionText) formData.append('questionText', questionText);
  if (subject) formData.append('subject', subject);
  if (imageFile) formData.append('image', imageFile);

  $.ajax({
    url: '/homework/analyze',
    method: 'POST',
    data: formData,
    processData: false,
    contentType: false,
    success: function (data) {
      lastQuestion = questionText || '图片题目';
      lastSubject = data.subject || subject;
      currentStep = '';
      $('#analysisResult').html(renderAnalysis(data));
      $('#analysisSection').show();
      renderMathJax();
      getGuidance('题目理解');
      getParentSupport();
    },
    error: function (xhr) {
      $('#analysisResult').html('<span class="text-danger">AI分析失败：' + (xhr.responseJSON?.error || '未知错误') + '</span>');
      $('#analysisSection').show();
    },
    complete: function () {
      $('#analyzeBtn').prop('disabled', false).text('智能分析');
    }
  });
});
function getGuidance(step) {
  $('#guidanceResult').html('<span class="text-secondary">正在生成个性化引导...</span>');
  $('#guidanceSection').show();

  const payload = {
    questionText: lastQuestion,
    currentStep: step
  };

  if (currentImageBase64) {
    payload.imageBase64 = currentImageBase64; // Send image data too
  }

  $.ajax({
    url: '/homework/guidance',
    method: 'POST',
    contentType: 'application/json',
    data: JSON.stringify(payload),
    success: function (data) {
      currentStep = data.nextStep || '';
      $('#guidanceResult').html(renderGuidance(data));
      renderMathJax();
      $('#nextGuidanceBtn').toggle(!!data.nextStep);
    },
    error: function (xhr) {
      $('#guidanceResult').html('<span class="text-danger">AI引导失败：' + (xhr.responseJSON?.error || '未知错误') + '</span>');
      $('#nextGuidanceBtn').hide();
    }
  });
}
$('#nextGuidanceBtn').on('click', function () {
  if (currentStep) getGuidance(currentStep);
});

function getParentSupport() {
  $('#parentSupportResult').html('<span class="text-secondary">AI家长支持加载中...</span>');
  $('#parentSection').show();
  $.post('/homework/parent-support', {
    questionText: lastQuestion,
    subject: lastSubject
  }, function (data) {
    $('#parentSupportResult').html(renderParentSupport(data));
    renderMathJax();
  }).fail(function (xhr) {
    $('#parentSupportResult').html('<span class="text-danger">AI家长支持失败：' + (xhr.responseJSON?.error || '未知错误') + '</span>');
  });
}
</script>
